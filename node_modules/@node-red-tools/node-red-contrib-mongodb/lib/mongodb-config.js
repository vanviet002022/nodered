"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("./core");
module.exports = function register(RED) {
    RED.nodes.registerType('mongodb-config', function mongodbConfig(props) {
        var _this = this;
        RED.nodes.createNode(this, props);
        this.settings = Object.freeze({
            host: props.host,
            port: props.port,
            database: props.database,
            username: this.credentials.username,
            password: this.credentials.password,
            collections: (props.collections || []).map(function (config) {
                var deserizliedIndexes = RED.util.evaluateNodeProperty(config.autoCreateIndexes, config.autoCreateIndexesType, _this, {});
                var indexes;
                if (Array.isArray(deserizliedIndexes)) {
                    indexes = deserizliedIndexes;
                }
                else if (typeof deserizliedIndexes === 'object') {
                    indexes = [deserizliedIndexes];
                }
                return {
                    name: config.name,
                    options: RED.util.evaluateNodeProperty(config.options, config.optionsType, _this, {}),
                    autoCreate: config.autoCreate,
                    autoCreateOptions: RED.util.evaluateNodeProperty(config.autoCreateOptions, config.autoCreateOptionsType, _this, {}),
                    autoCreateIndexes: indexes,
                };
            }),
            options: RED.util.evaluateNodeProperty(props.options || '{}', 'json', this, {}),
        });
        this.on('close', function (done) {
            core_1.close(_this.settings).finally(function () { return done(); });
        });
    }, {
        credentials: {
            username: { type: 'text' },
            password: { type: 'password' },
        },
    });
    if (RED.httpAdmin != null) {
        RED.httpAdmin.get('/mongodb/collection/methods', function (_, res) {
            return res.json(core_1.Collection.methods());
        });
        RED.httpAdmin.get('/mongodb/collections/${config}', function (_, res) {
            return res.json(core_1.Collection.methods());
        });
    }
};
